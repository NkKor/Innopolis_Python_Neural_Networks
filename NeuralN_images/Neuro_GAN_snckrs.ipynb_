{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1pE6B5dgHiNmFtIyqU34N6ozlCLu2tPYE","timestamp":1725941714541}],"gpuType":"V28"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"TPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"J_OIkXFXFkKU","executionInfo":{"status":"ok","timestamp":1725941785415,"user_tz":-420,"elapsed":12416,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"db918c22-450a-437e-a4ee-74a1c917b6e4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting opendatasets\n","  Downloading opendatasets-0.1.22-py3-none-any.whl.metadata (9.2 kB)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.1.4)\n","Requirement already satisfied: fastai in /usr/local/lib/python3.10/dist-packages (2.7.17)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from opendatasets) (4.66.5)\n","Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (from opendatasets) (1.6.17)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from opendatasets) (8.1.7)\n","Requirement already satisfied: numpy<2,>=1.22.4 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.26.4)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: pip in /usr/local/lib/python3.10/dist-packages (from fastai) (24.1.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from fastai) (24.1)\n","Requirement already satisfied: fastdownload<2,>=0.0.5 in /usr/local/lib/python3.10/dist-packages (from fastai) (0.0.7)\n","Requirement already satisfied: fastcore<1.8,>=1.5.29 in /usr/local/lib/python3.10/dist-packages (from fastai) (1.7.1)\n","Requirement already satisfied: torchvision>=0.11 in /usr/local/lib/python3.10/dist-packages (from fastai) (0.19.0+cpu)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from fastai) (3.7.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from fastai) (2.32.3)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from fastai) (6.0.2)\n","Requirement already satisfied: fastprogress>=0.2.4 in /usr/local/lib/python3.10/dist-packages (from fastai) (1.0.3)\n","Requirement already satisfied: pillow>=9.0.0 in /usr/local/lib/python3.10/dist-packages (from fastai) (10.4.0)\n","Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (from fastai) (1.3.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from fastai) (1.13.1)\n","Requirement already satisfied: spacy<4 in /usr/local/lib/python3.10/dist-packages (from fastai) (3.7.6)\n","Requirement already satisfied: torch<2.5,>=1.10 in /usr/local/lib/python3.10/dist-packages (from fastai) (2.4.0+cpu)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas) (1.16.0)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (3.0.12)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (1.0.5)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (1.0.10)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (2.0.8)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (3.0.9)\n","Requirement already satisfied: thinc<8.3.0,>=8.2.2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (8.2.5)\n","Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (1.1.3)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (2.4.8)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (2.0.10)\n","Requirement already satisfied: weasel<0.5.0,>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (0.4.1)\n","Requirement already satisfied: typer<1.0.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (0.12.5)\n","Requirement already satisfied: pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (2.8.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (3.1.4)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (71.0.4)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai) (3.4.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->fastai) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->fastai) (3.8)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->fastai) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->fastai) (2024.8.30)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch<2.5,>=1.10->fastai) (3.15.4)\n","Requirement already satisfied: typing-extensions>=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch<2.5,>=1.10->fastai) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch<2.5,>=1.10->fastai) (1.13.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch<2.5,>=1.10->fastai) (3.3)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch<2.5,>=1.10->fastai) (2024.6.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle->opendatasets) (8.0.4)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle->opendatasets) (6.1.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->fastai) (1.3.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->fastai) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->fastai) (4.53.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->fastai) (1.4.5)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->fastai) (3.1.4)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->fastai) (1.4.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn->fastai) (3.5.0)\n","Requirement already satisfied: language-data>=1.2 in /usr/local/lib/python3.10/dist-packages (from langcodes<4.0.0,>=3.2.0->spacy<4->fastai) (1.2.0)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<4->fastai) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic!=1.8,!=1.8.1,<3.0.0,>=1.7.4->spacy<4->fastai) (2.20.1)\n","Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<4->fastai) (0.7.11)\n","Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.3.0,>=8.2.2->spacy<4->fastai) (0.1.5)\n","Requirement already satisfied: shellingham>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<4->fastai) (1.5.4)\n","Requirement already satisfied: rich>=10.11.0 in /usr/local/lib/python3.10/dist-packages (from typer<1.0.0,>=0.3.0->spacy<4->fastai) (13.8.0)\n","Requirement already satisfied: cloudpathlib<1.0.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<4->fastai) (0.19.0)\n","Requirement already satisfied: smart-open<8.0.0,>=5.2.1 in /usr/local/lib/python3.10/dist-packages (from weasel<0.5.0,>=0.1.0->spacy<4->fastai) (7.0.4)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->kaggle->opendatasets) (0.5.1)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->spacy<4->fastai) (2.1.5)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle->opendatasets) (1.3)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy->torch<2.5,>=1.10->fastai) (1.3.0)\n","Requirement already satisfied: marisa-trie>=0.7.7 in /usr/local/lib/python3.10/dist-packages (from language-data>=1.2->langcodes<4.0.0,>=3.2.0->spacy<4->fastai) (1.2.0)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<4->fastai) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<4->fastai) (2.18.0)\n","Requirement already satisfied: wrapt in /usr/local/lib/python3.10/dist-packages (from smart-open<8.0.0,>=5.2.1->weasel<0.5.0,>=0.1.0->spacy<4->fastai) (1.14.1)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich>=10.11.0->typer<1.0.0,>=0.3.0->spacy<4->fastai) (0.1.2)\n","Downloading opendatasets-0.1.22-py3-none-any.whl (15 kB)\n","Installing collected packages: opendatasets\n","Successfully installed opendatasets-0.1.22\n"]}],"source":["!pip install opendatasets pandas fastai\n","import fastai\n","import pandas as pd\n","import torch\n","from fastai.vision.all import *\n","from fastai.vision.gan import *\n","from fastai import optimizer\n","import os\n","from pathlib import Path\n","TRAIN = Path(\"./train\")\n","import numpy as np\n","from PIL import Image\n","os.makedirs(TRAIN)\n"]},{"cell_type":"code","source":["os.environ[\"KAGGLE_CONFIG_DIR\"]=\"/content/\"\n","!kaggle datasets download -d zalando-research/fashionmnist -p content/\n","!unzip /content/content/fashionmnist.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WK7DXo_uGHt_","executionInfo":{"status":"ok","timestamp":1725941802135,"user_tz":-420,"elapsed":5379,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"1c58031c-d94c-4cdb-f12a-126179ec5525"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Warning: Your Kaggle API key is readable by other users on this system! To fix this, you can run 'chmod 600 /content/kaggle.json'\n","Dataset URL: https://www.kaggle.com/datasets/zalando-research/fashionmnist\n","License(s): other\n","Downloading fashionmnist.zip to content\n"," 71% 49.0M/68.8M [00:00<00:00, 183MB/s]\n","100% 68.8M/68.8M [00:00<00:00, 186MB/s]\n","Archive:  /content/content/fashionmnist.zip\n","  inflating: fashion-mnist_test.csv  \n","  inflating: fashion-mnist_train.csv  \n","  inflating: t10k-images-idx3-ubyte  \n","  inflating: t10k-labels-idx1-ubyte  \n","  inflating: train-images-idx3-ubyte  \n","  inflating: train-labels-idx1-ubyte  \n"]}]},{"cell_type":"code","source":["train = pd.read_csv(\"/content/fashion-mnist_train.csv\")\n","train_snck = train[train[\"label\"] ==7 ]\n","train_snck.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"id":"NEI3gIudGnaQ","executionInfo":{"status":"ok","timestamp":1725941811849,"user_tz":-420,"elapsed":3999,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"2e7faf3c-6464-4be3-904d-e78fc542e35b"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    label  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  pixel8  \\\n","21      7       0       0       0       0       0       0       0       0   \n","28      7       0       0       0       0       0       0       0       0   \n","35      7       0       0       0       0       0       0       0       0   \n","47      7       0       0       0       0       0       0       0       0   \n","48      7       0       0       0       0       0       0       0       0   \n","\n","    pixel9  ...  pixel775  pixel776  pixel777  pixel778  pixel779  pixel780  \\\n","21       0  ...         0         0         0         0         0         0   \n","28       0  ...         0         0         0         0         0         0   \n","35       0  ...         0         0         0         0         0         0   \n","47       0  ...         0         0         0         0         0         0   \n","48       0  ...         0         0         0         0         0         0   \n","\n","    pixel781  pixel782  pixel783  pixel784  \n","21         0         0         0         0  \n","28         0         0         0         0  \n","35         0         0         0         0  \n","47         0         0         0         0  \n","48         0         0         0         0  \n","\n","[5 rows x 785 columns]"],"text/html":["\n","  <div id=\"df-c56ecc7a-bd0f-4bb7-af3e-8f385808b097\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>pixel1</th>\n","      <th>pixel2</th>\n","      <th>pixel3</th>\n","      <th>pixel4</th>\n","      <th>pixel5</th>\n","      <th>pixel6</th>\n","      <th>pixel7</th>\n","      <th>pixel8</th>\n","      <th>pixel9</th>\n","      <th>...</th>\n","      <th>pixel775</th>\n","      <th>pixel776</th>\n","      <th>pixel777</th>\n","      <th>pixel778</th>\n","      <th>pixel779</th>\n","      <th>pixel780</th>\n","      <th>pixel781</th>\n","      <th>pixel782</th>\n","      <th>pixel783</th>\n","      <th>pixel784</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 785 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c56ecc7a-bd0f-4bb7-af3e-8f385808b097')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c56ecc7a-bd0f-4bb7-af3e-8f385808b097 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c56ecc7a-bd0f-4bb7-af3e-8f385808b097');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-982d5da5-2110-4af5-afd2-d5f219061306\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-982d5da5-2110-4af5-afd2-d5f219061306')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-982d5da5-2110-4af5-afd2-d5f219061306 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_snck"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["def generate_sneakers (sneaker, filepath):\n","  sneaker = sneaker.reshape(28, 28)\n","  sneaker = sneaker.astype(np.uint8)\n","  img = Image.fromarray(sneaker)\n","  img.save(filepath)"],"metadata":{"id":"OsJmL1rB9RCT","executionInfo":{"status":"ok","timestamp":1725941818310,"user_tz":-420,"elapsed":315,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["for index, row in train_snck.iterrows():\n","  label, sneaker = row[0], row[1:]\n","  folder = TRAIN\n","  filename = f'{index}.jpg'\n","  filepath = folder/filename\n","  sneaker = sneaker.values\n","\n","  generate_sneakers (sneaker, filepath)"],"metadata":{"id":"rMPwbrhR-6Nq","executionInfo":{"status":"ok","timestamp":1725941822998,"user_tz":-420,"elapsed":3007,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"97811404-5463-4530-e1c1-9854e459e7cb","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":5,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-5-6bd40fdbeebb>:2: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n","  label, sneaker = row[0], row[1:]\n"]}]},{"cell_type":"code","source":["bs = 64\n","size = 32"],"metadata":{"id":"1sZEQxjP_-ws","executionInfo":{"status":"ok","timestamp":1725941826200,"user_tz":-420,"elapsed":323,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["dblock = DataBlock(blocks = (TransformBlock, ImageBlock),\n","                   get_x = generate_noise,\n","                   get_items = get_image_files,\n","                   splitter = RandomSplitter(seed = 24),\n","                   item_tfms=Resize(size, method=ResizeMethod.Crop),\n","                   batch_tfms = Normalize.from_stats(torch.tensor([0.5,0.5,0.5]), torch.tensor([0.5,0.5,0.5]))\n","                   )\n","path = Path(\"/content/train\")\n","dls = dblock.dataloaders(path, path=path, bs=bs)\n","dls.c=1\n","dls.show_batch(max_n=16)"],"metadata":{"id":"Um3HR4NcAAAH","executionInfo":{"status":"ok","timestamp":1725941830776,"user_tz":-420,"elapsed":1146,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"f986f8ba-6a96-4abb-e40e-5ca64f2b2dea","colab":{"base_uri":"https://localhost:8080/","height":961}},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1200 with 16 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["generator = basic_generator(out_size = size, n_channels=3)\n","discriminator = basic_critic(in_size = size, n_channels=3)"],"metadata":{"id":"3zvX7iiNClXA","executionInfo":{"status":"ok","timestamp":1725941835522,"user_tz":-420,"elapsed":306,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["switcher = partial(AdaptiveGANSwitcher, critic_thresh=0.65)\n","learner = GANLearner.wgan(dls,generator,discriminator,model_dir='/content',wd=0.)\n","lr = 1e-4\n","epohs = 50\n","learner.fit(epohs,lr)\n","learner.save(f\"{epohs}epoh_snckr\")\n","learner.show_results()"],"metadata":{"id":"CWbtVS0ICm76","outputId":"87d39f70-e533-4140-84d7-09c3f5ac14ba","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1725942162889,"user_tz":-420,"elapsed":322026,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}}},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/fastai/callback/core.py:71: UserWarning: You are shadowing an attribute (generator) that exists in the learner. Use `self.learn.generator` to avoid this\n","  warn(f\"You are shadowing an attribute ({name}) that exists in the learner. Use `self.learn.{name}` to avoid this\")\n","/usr/local/lib/python3.10/dist-packages/fastai/callback/core.py:71: UserWarning: You are shadowing an attribute (critic) that exists in the learner. Use `self.learn.critic` to avoid this\n","  warn(f\"You are shadowing an attribute ({name}) that exists in the learner. Use `self.learn.{name}` to avoid this\")\n","/usr/local/lib/python3.10/dist-packages/fastai/callback/core.py:71: UserWarning: You are shadowing an attribute (gen_mode) that exists in the learner. Use `self.learn.gen_mode` to avoid this\n","  warn(f\"You are shadowing an attribute ({name}) that exists in the learner. Use `self.learn.{name}` to avoid this\")\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>gen_loss</th>\n","      <th>crit_loss</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>-0.223724</td>\n","      <td>0.172143</td>\n","      <td>0.172143</td>\n","      <td>-0.447380</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>-0.393735</td>\n","      <td>0.294974</td>\n","      <td>0.294974</td>\n","      <td>-0.629546</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>-0.480320</td>\n","      <td>0.317524</td>\n","      <td>0.317524</td>\n","      <td>-0.689389</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>-0.508621</td>\n","      <td>0.323622</td>\n","      <td>0.323622</td>\n","      <td>-0.698492</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>-0.518767</td>\n","      <td>0.295798</td>\n","      <td>0.295798</td>\n","      <td>-0.698973</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>-0.523909</td>\n","      <td>0.291823</td>\n","      <td>0.291823</td>\n","      <td>-0.708510</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>-0.521252</td>\n","      <td>0.271432</td>\n","      <td>0.271432</td>\n","      <td>-0.690611</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>-0.513093</td>\n","      <td>0.230219</td>\n","      <td>0.230219</td>\n","      <td>-0.684383</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>8</td>\n","      <td>-0.503664</td>\n","      <td>0.170812</td>\n","      <td>0.170812</td>\n","      <td>-0.679646</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>9</td>\n","      <td>-0.509609</td>\n","      <td>0.136252</td>\n","      <td>0.136252</td>\n","      <td>-0.691066</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>10</td>\n","      <td>-0.513589</td>\n","      <td>0.145694</td>\n","      <td>0.145694</td>\n","      <td>-0.687717</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>11</td>\n","      <td>-0.514281</td>\n","      <td>0.181576</td>\n","      <td>0.181576</td>\n","      <td>-0.694753</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>12</td>\n","      <td>-0.511370</td>\n","      <td>0.168334</td>\n","      <td>0.168334</td>\n","      <td>-0.675262</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>13</td>\n","      <td>-0.505203</td>\n","      <td>0.161395</td>\n","      <td>0.161395</td>\n","      <td>-0.670544</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>14</td>\n","      <td>-0.497974</td>\n","      <td>0.201620</td>\n","      <td>0.201620</td>\n","      <td>-0.670625</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>15</td>\n","      <td>-0.488672</td>\n","      <td>0.197139</td>\n","      <td>0.197139</td>\n","      <td>-0.647149</td>\n","      <td>00:05</td>\n","    </tr>\n","    <tr>\n","      <td>16</td>\n","      <td>-0.487151</td>\n","      <td>0.200421</td>\n","      <td>0.200421</td>\n","      <td>-0.635697</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>17</td>\n","      <td>-0.476943</td>\n","      <td>0.235175</td>\n","      <td>0.235175</td>\n","      <td>-0.636008</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>18</td>\n","      <td>-0.471219</td>\n","      <td>0.175184</td>\n","      <td>0.175184</td>\n","      <td>-0.616046</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>19</td>\n","      <td>-0.457487</td>\n","      <td>0.193611</td>\n","      <td>0.193611</td>\n","      <td>-0.590120</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>20</td>\n","      <td>-0.454010</td>\n","      <td>0.161352</td>\n","      <td>0.161352</td>\n","      <td>-0.597999</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>21</td>\n","      <td>-0.444808</td>\n","      <td>0.136509</td>\n","      <td>0.136509</td>\n","      <td>-0.601588</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>22</td>\n","      <td>-0.421411</td>\n","      <td>0.150822</td>\n","      <td>0.150822</td>\n","      <td>-0.588041</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>23</td>\n","      <td>-0.425480</td>\n","      <td>0.198314</td>\n","      <td>0.198314</td>\n","      <td>-0.597002</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>24</td>\n","      <td>-0.424940</td>\n","      <td>0.242288</td>\n","      <td>0.242288</td>\n","      <td>-0.556663</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>25</td>\n","      <td>-0.426104</td>\n","      <td>0.075848</td>\n","      <td>0.075848</td>\n","      <td>-0.580016</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>26</td>\n","      <td>-0.401420</td>\n","      <td>0.131760</td>\n","      <td>0.131760</td>\n","      <td>-0.587747</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>27</td>\n","      <td>-0.406756</td>\n","      <td>0.144788</td>\n","      <td>0.144788</td>\n","      <td>-0.572013</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>28</td>\n","      <td>-0.423039</td>\n","      <td>0.174352</td>\n","      <td>0.174352</td>\n","      <td>-0.635148</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>29</td>\n","      <td>-0.417541</td>\n","      <td>0.148324</td>\n","      <td>0.148324</td>\n","      <td>-0.585524</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>30</td>\n","      <td>-0.415523</td>\n","      <td>0.221320</td>\n","      <td>0.221320</td>\n","      <td>-0.585471</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>31</td>\n","      <td>-0.408820</td>\n","      <td>0.245901</td>\n","      <td>0.245901</td>\n","      <td>-0.532938</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>32</td>\n","      <td>-0.414231</td>\n","      <td>0.294879</td>\n","      <td>0.294879</td>\n","      <td>-0.539793</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>33</td>\n","      <td>-0.416583</td>\n","      <td>0.263519</td>\n","      <td>0.263519</td>\n","      <td>-0.505963</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>34</td>\n","      <td>-0.424168</td>\n","      <td>0.200082</td>\n","      <td>0.200082</td>\n","      <td>-0.588434</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>35</td>\n","      <td>-0.392711</td>\n","      <td>0.150569</td>\n","      <td>0.150569</td>\n","      <td>-0.577065</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>36</td>\n","      <td>-0.391259</td>\n","      <td>0.199934</td>\n","      <td>0.199934</td>\n","      <td>-0.562886</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>37</td>\n","      <td>-0.418132</td>\n","      <td>0.191906</td>\n","      <td>0.191906</td>\n","      <td>-0.556077</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>38</td>\n","      <td>-0.415872</td>\n","      <td>0.210774</td>\n","      <td>0.210774</td>\n","      <td>-0.601283</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>39</td>\n","      <td>-0.376884</td>\n","      <td>0.181390</td>\n","      <td>0.181390</td>\n","      <td>-0.510877</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>40</td>\n","      <td>-0.399731</td>\n","      <td>0.164772</td>\n","      <td>0.164772</td>\n","      <td>-0.490757</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>41</td>\n","      <td>-0.398442</td>\n","      <td>0.140857</td>\n","      <td>0.140857</td>\n","      <td>-0.569470</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>42</td>\n","      <td>-0.410570</td>\n","      <td>0.180656</td>\n","      <td>0.180656</td>\n","      <td>-0.570517</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>43</td>\n","      <td>-0.407593</td>\n","      <td>0.285065</td>\n","      <td>0.285065</td>\n","      <td>-0.505185</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>44</td>\n","      <td>-0.394559</td>\n","      <td>0.187542</td>\n","      <td>0.187542</td>\n","      <td>-0.589109</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>45</td>\n","      <td>-0.404951</td>\n","      <td>0.200769</td>\n","      <td>0.200769</td>\n","      <td>-0.576643</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>46</td>\n","      <td>-0.403025</td>\n","      <td>0.295568</td>\n","      <td>0.295568</td>\n","      <td>-0.552613</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>47</td>\n","      <td>-0.402982</td>\n","      <td>0.239450</td>\n","      <td>0.239450</td>\n","      <td>-0.521418</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>48</td>\n","      <td>-0.395976</td>\n","      <td>0.317080</td>\n","      <td>0.317080</td>\n","      <td>-0.537000</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>49</td>\n","      <td>-0.391623</td>\n","      <td>0.198664</td>\n","      <td>0.198664</td>\n","      <td>-0.525004</td>\n","      <td>00:06</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 900x900 with 9 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["learner = GANLearner.wgan(dls,generator,discriminator,model_dir='/content',wd=0.)\n","learner.load(f'50epoh_snckr')\n","additional_epochs = 50\n","lr = 1e-4\n","learner.fit(additional_epochs,lr)\n","learner.save(f\"{additional_epochs}epoh_snckr\")\n","learner.show_results()"],"metadata":{"id":"4CieIQ7UDPVb","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1725942544769,"user_tz":-420,"elapsed":330128,"user":{"displayName":"Евгений Зорин","userId":"04367070061568528420"}},"outputId":"e7cbccb9-4028-4147-ad4a-e75968e819b3"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/fastai/learner.py:53: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  state = torch.load(file, map_location=device, **torch_load_kwargs)\n","/usr/local/lib/python3.10/dist-packages/fastai/learner.py:60: UserWarning: Could not load the optimizer state.\n","  if with_opt: warn(\"Could not load the optimizer state.\")\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>epoch</th>\n","      <th>train_loss</th>\n","      <th>valid_loss</th>\n","      <th>gen_loss</th>\n","      <th>crit_loss</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>-0.176951</td>\n","      <td>-0.164942</td>\n","      <td>-0.164942</td>\n","      <td>-0.070059</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>-0.062074</td>\n","      <td>-0.288358</td>\n","      <td>-0.288358</td>\n","      <td>0.035089</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>-0.019052</td>\n","      <td>-0.337774</td>\n","      <td>-0.337774</td>\n","      <td>0.060715</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>-0.000773</td>\n","      <td>-0.358821</td>\n","      <td>-0.358821</td>\n","      <td>0.062585</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.011313</td>\n","      <td>-0.376891</td>\n","      <td>-0.376891</td>\n","      <td>0.096695</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.017923</td>\n","      <td>-0.385711</td>\n","      <td>-0.385711</td>\n","      <td>0.096000</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>0.021795</td>\n","      <td>-0.392482</td>\n","      <td>-0.392482</td>\n","      <td>0.093263</td>\n","      <td>00:07</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>0.025014</td>\n","      <td>-0.399719</td>\n","      <td>-0.399719</td>\n","      <td>0.092750</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>8</td>\n","      <td>0.028400</td>\n","      <td>-0.405857</td>\n","      <td>-0.405857</td>\n","      <td>0.106199</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>9</td>\n","      <td>0.030824</td>\n","      <td>-0.408218</td>\n","      <td>-0.408218</td>\n","      <td>0.119281</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>10</td>\n","      <td>0.032425</td>\n","      <td>-0.412788</td>\n","      <td>-0.412788</td>\n","      <td>0.133415</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>11</td>\n","      <td>0.033767</td>\n","      <td>-0.412657</td>\n","      <td>-0.412657</td>\n","      <td>0.106937</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>12</td>\n","      <td>0.034769</td>\n","      <td>-0.416629</td>\n","      <td>-0.416629</td>\n","      <td>0.115172</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>13</td>\n","      <td>0.035481</td>\n","      <td>-0.417226</td>\n","      <td>-0.417226</td>\n","      <td>0.101642</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>14</td>\n","      <td>0.036074</td>\n","      <td>-0.418869</td>\n","      <td>-0.418869</td>\n","      <td>0.103044</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>15</td>\n","      <td>0.037056</td>\n","      <td>-0.421550</td>\n","      <td>-0.421550</td>\n","      <td>0.120783</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>16</td>\n","      <td>0.037278</td>\n","      <td>-0.421766</td>\n","      <td>-0.421766</td>\n","      <td>0.124221</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>17</td>\n","      <td>0.036929</td>\n","      <td>-0.423244</td>\n","      <td>-0.423244</td>\n","      <td>0.112600</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>18</td>\n","      <td>0.036507</td>\n","      <td>-0.423086</td>\n","      <td>-0.423086</td>\n","      <td>0.117813</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>19</td>\n","      <td>0.038411</td>\n","      <td>-0.422698</td>\n","      <td>-0.422698</td>\n","      <td>0.118133</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>20</td>\n","      <td>0.038906</td>\n","      <td>-0.420663</td>\n","      <td>-0.420663</td>\n","      <td>0.110492</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>21</td>\n","      <td>0.038968</td>\n","      <td>-0.420705</td>\n","      <td>-0.420705</td>\n","      <td>0.106286</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>22</td>\n","      <td>0.040197</td>\n","      <td>-0.421875</td>\n","      <td>-0.421875</td>\n","      <td>0.111944</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>23</td>\n","      <td>0.040398</td>\n","      <td>-0.422433</td>\n","      <td>-0.422433</td>\n","      <td>0.119184</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>24</td>\n","      <td>0.040301</td>\n","      <td>-0.419699</td>\n","      <td>-0.419699</td>\n","      <td>0.125479</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>25</td>\n","      <td>0.039869</td>\n","      <td>-0.419950</td>\n","      <td>-0.419950</td>\n","      <td>0.128167</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>26</td>\n","      <td>0.040198</td>\n","      <td>-0.417446</td>\n","      <td>-0.417446</td>\n","      <td>0.117587</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>27</td>\n","      <td>0.040349</td>\n","      <td>-0.420822</td>\n","      <td>-0.420822</td>\n","      <td>0.134883</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>28</td>\n","      <td>0.041259</td>\n","      <td>-0.420588</td>\n","      <td>-0.420588</td>\n","      <td>0.151624</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>29</td>\n","      <td>0.040882</td>\n","      <td>-0.420773</td>\n","      <td>-0.420773</td>\n","      <td>0.113162</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>30</td>\n","      <td>0.041879</td>\n","      <td>-0.420254</td>\n","      <td>-0.420254</td>\n","      <td>0.140859</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>31</td>\n","      <td>0.041701</td>\n","      <td>-0.421664</td>\n","      <td>-0.421664</td>\n","      <td>0.122593</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>32</td>\n","      <td>0.043336</td>\n","      <td>-0.420952</td>\n","      <td>-0.420952</td>\n","      <td>0.123541</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>33</td>\n","      <td>0.042349</td>\n","      <td>-0.420154</td>\n","      <td>-0.420154</td>\n","      <td>0.133385</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>34</td>\n","      <td>0.041827</td>\n","      <td>-0.420859</td>\n","      <td>-0.420859</td>\n","      <td>0.132729</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>35</td>\n","      <td>0.041618</td>\n","      <td>-0.419987</td>\n","      <td>-0.419987</td>\n","      <td>0.125879</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>36</td>\n","      <td>0.042841</td>\n","      <td>-0.421314</td>\n","      <td>-0.421314</td>\n","      <td>0.130223</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>37</td>\n","      <td>0.042719</td>\n","      <td>-0.419981</td>\n","      <td>-0.419981</td>\n","      <td>0.144853</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>38</td>\n","      <td>0.042744</td>\n","      <td>-0.420127</td>\n","      <td>-0.420127</td>\n","      <td>0.134969</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>39</td>\n","      <td>0.042498</td>\n","      <td>-0.421076</td>\n","      <td>-0.421076</td>\n","      <td>0.138947</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>40</td>\n","      <td>0.042440</td>\n","      <td>-0.419708</td>\n","      <td>-0.419708</td>\n","      <td>0.132345</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>41</td>\n","      <td>0.042640</td>\n","      <td>-0.419174</td>\n","      <td>-0.419174</td>\n","      <td>0.118199</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>42</td>\n","      <td>0.042624</td>\n","      <td>-0.419443</td>\n","      <td>-0.419443</td>\n","      <td>0.122237</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>43</td>\n","      <td>0.042936</td>\n","      <td>-0.418359</td>\n","      <td>-0.418359</td>\n","      <td>0.127376</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>44</td>\n","      <td>0.042975</td>\n","      <td>-0.418654</td>\n","      <td>-0.418654</td>\n","      <td>0.132993</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>45</td>\n","      <td>0.043337</td>\n","      <td>-0.419030</td>\n","      <td>-0.419030</td>\n","      <td>0.149840</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>46</td>\n","      <td>0.043180</td>\n","      <td>-0.417395</td>\n","      <td>-0.417395</td>\n","      <td>0.129899</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>47</td>\n","      <td>0.043090</td>\n","      <td>-0.418425</td>\n","      <td>-0.418425</td>\n","      <td>0.148543</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>48</td>\n","      <td>0.043469</td>\n","      <td>-0.417432</td>\n","      <td>-0.417432</td>\n","      <td>0.131741</td>\n","      <td>00:06</td>\n","    </tr>\n","    <tr>\n","      <td>49</td>\n","      <td>0.042991</td>\n","      <td>-0.416214</td>\n","      <td>-0.416214</td>\n","      <td>0.124208</td>\n","      <td>00:06</td>\n","    </tr>\n","  </tbody>\n","</table>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 900x900 with 9 Axes>"],"image/png":"\n"},"metadata":{}}]}]}